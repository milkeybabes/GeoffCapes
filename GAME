ELK:	DB 0TUNE_BIT:	DB 0GAME:	LDA #&81	LDX #0	LDY #255	JSR &FFF4	CPX #1	BNE BBC_ONE	LDA #1	STA ELK	BNE STBBC_ONE:	LDA #0	STA ELK ST:	JSR SETSEED	JSR SET_UP	LDA #0	LDY #&9FWIPE_LO:	STA &0000,Y	DEY	BNE WIPE_LO	LDA #3	STA &258			LDA #4	LDX #1	JSR &FFF4	LDX #255	TXSFIRST_PAGE:		JSR VDU	DB 22,5	NOP	LDA #14	LDX #4	JSR &FFF4	JSR VDU	DB 19,0,4,0,0,0	DB 19,1,0,0,0,0	DB 19,2,1,0,0,0	DB 19,3,7,0,0,0	NOP	JSR C_OFF	JSR VDU	DB 31,3,1,17,3	NOP	LDY #224LOGON:	TYA	JSR &FFEE	INY	CPY #238	BNE LOGON	JSR VDU	DB 31,3,2	NOP	LDY #238LOGO2:	TYA	JSR &FFEE	INY	CPY #252	BNE LOGO2	JSR VDU	DB 31,6,3,17,2	NOP	JSR LINE_PRINT	DB 'Presents'	NOP	LDA #22		; GEOFF FACE	JSR PARAM	LDA #0	LDX #43	LDY #50	JSR IMAGE	LDA #1	STA FLOP	LDA #0	LDX #10	JSR IMAGE	JSR VDU	DB 31,4,9	NOP	JSR LINE_PRINT	DB 'GEOFF  CAPES'	NOP	JSR VDU	DB 31,5,11	NOP	JSR LINE_PRINT	DB 'STRONG MAN'	NOP	JSR VDU	DB 31,9,17	NOP	JSR LINE_PRINT	DB 'by'	NOP	JSR VDU	DB 31,3,22,17,3	NOP	JSR LINE_PRINT	DB 'M.J.Archer and'	NOP	JSR VDU	DB 31,3,25	NOP	JSR LINE_PRINT	DB 'D.G.Wainwright'	NOP	JSR VDU	DB 31,5,28,17,1	DB 'GRAPHICS BY'	NOP	JSR VDU	DB 31,4,30	DB 'SIRT & ALISON'	NOP	JSR C_OFF	JSR A_GET	JSR vdu	DB 12,31,2,5	NOP	JSR line_print	DB 'Do You Want....'	NOP	LDA ELK	BNE NO_JOY	JSR VDU	DB 31,2,9	NOP	JSR LINE_PRINT	DB 'Joysticks (Y/N)'	NOP	JSR C_OFF	JSR Y_N	LDA #0	ADC #0	STA JOYSTICKNO_JOY:	JSR vdu	DB 31,4,12	NOP	JSR line_print		DB'Sound (Y/N)'	NOP	JSR Y_N	LDA #0	ADC #0	EOR #1	TAX	LDA #210	JSR &FFF4MAIN_START2:	LDA #0	STA DEAD	STA YOURSC	STA YOURSC+1	STA TIMER_STATUS	STA SKILL	LDA #3	STA LIVESTHERE:	LDY #5	; ENTER'S AT EACH	LDA #0	; SKILL LEVEL OKlopy:	STA level1,Y	DEY	BPL lopy	LDA #22	; SELECT MODE 5	JSR &FFEE	LDA #5	JSR &FFEE	JSR C_OFF	LDA #0	STA TIMER_STATUS 	STA TUNE_BIT	JSR DRAWSCR	JSR TRAINING_MODE		; FIRST EVENTnext_ev:	LDA #0	STA CONTEST	JSR RESET	JSR DIGITAL	LDA #7	; CAR ROLL	JSR DRAWSCR			JSR PLAY_1	; GAME 1	JSR STOP	LDA DEAD	BEQ next_ev1	; WONE	CMP #2	BEQ FFIN1	; FAINTED	JSR TIME_UP	JMP NEXT_EVFFIN1:	JMP THE_ENDnext_ev1:	JSR SCORENEXTA_EV1:	LDA #1	STA CONTEST	JSR RESET	JSR DIGITAL	LDA #6	; WRESTING	JSR DRAWSCR	JSR PLAY_2	; GAME 2	JSR STOP	LDA DEAD	BEQ next_ev2	; WONE	CMP #2	BEQ FFIN2	; FAINTED	JSR TIME_UP	JMP NEXTA_EV1FFIN2:	JMP THE_ENDnext_ev2:	JSR SCORENEXTA_EV2:	LDA #2	STA CONTEST	JSR RESET	JSR DIGITAL	LDA #5	; BELL RING	JSR DRAWSCR	JSR PLAY_3	; GAME 3	JSR STOP	LDA DEAD	BEQ next_ev3	; WONE	CMP #2	BEQ FFIN3	; FAINTED	JSR TIME_UP	JMP NEXTA_EV2FFIN3:	JMP THE_ENDnext_ev3:	JSR SCORENEXTA_EV3:	LDA #3	STA CONTEST	LDY #0	LDA #1INIT_LOG:	STA LOG_DATA,Y			DEY	BNE INIT_LOG	JSR RANDOM	AND #%00011111	ORA #%00010000	TAXNOTS_SS:	JSR RANDOM	AND #%01111111	TAY	JSR RANDOM	AND #1	CLC	ADC #2	STA LOG_DATA,Y	DEX	BNE NOTS_SS	JSR RESET	JSR DIGITAL	LDA #4	; WOOD CHOP	JSR DRAWSCR	JSR PLAY_4	; GAME 4	JSR STOP	LDA DEAD	BEQ next_ev4	; WONE	CMP #2	BEQ FFIN4	; FAINTED	JSR TIME_UP	JMP NEXTA_EV3FFIN4:	JMP THE_ENDnext_ev4:	JSR SCORENEXTA_EV4:	LDA #4	STA CONTEST	JSR RESET	JSR DIGITAL	LDA #3	; TUG OF WAR	JSR DRAWSCR	JSR PLAY_5	; GAME 5	JSR STOP	LDA DEAD	BEQ next_ev5	; WONE	CMP #2	BEQ FFIN5	; FAINTED	JSR TIME_UP	JMP NEXTA_EV4FFIN5:	JMP THE_ENDnext_ev5:	JSR SCORENEXTA_EV5:	LDA #5	STA CONTEST	JSR RESET	JSR DIGITAL	LDA #1	; BARREL LOADING	JSR DRAWSCR	JSR PLAY_6	;GAME 6	JSR STOP	LDA DEAD	BEQ next_ev6	; WONE	CMP #2	BEQ FFIN6	; FAINTED	JSR TIME_UP	JMP NEXTA_EV5FFIN6:	JMP THE_ENDnext_ev6:	JSR SCORE	INC SKILL	; HARDER	JMP THERE		; STEP UP A LEVEL		; MAKE GAME HARDER	TIME_TABLE:	DB &50	DB &20	DB &40	DB &50	DB &50	DB &90SUBTRACK_TABLE:	DB &05	DB &01	DB &02	DB &01	DB &02	DB &05STOP:	LDA #0	STA TIMER_STATUS	RTSRESET:	LDA #15	STA LEVEL6	LDA #0	STA DEAD	STA TOGGLE	LDY CONTEST	LDA TIME_TABLE,Y	SED	LDX SKILL	BEQ FIRST_SKILL	SECSUBTIME:	SBC SUBTRACK_TABLE,Y	DEX	BNE SUBTIMEFIRST_SKILL:	CLD	STA TV1	LDA #1	STA BLANKS	; ANY OLD THING	LDA #1	STA TIMER_STATUS	RTSSCORE:	JSR TIME	JSR VDU	DB 12,31,4,4	NOP	JSR LINE_PRINT	DB 'WELL DONE !'	NOP	JSR VDU		DB 31,3,10	NOP	JSR LINE_PRINT	DB 'BONUS.....'	NOP	LDA #1	STA P_DOUBLE_BIT	LDY CONTEST	CPY #2	BNE NOBELL	LDA NUMBER_BARS	STA TV1NOBELL:	LDX TV1	LDY #10	JSR MULT	TXA	CLC	ADC #200	TAX	BCC OKNC	INYOKNC:	JSR PRINT_DECIMAL	JSR VDU	DB 31,3,15	NOP	JSR LINE_PRINT	DB 'SCORE.....'	NOP	LDA YOURSC	STA &74	LDA YOURSC+1	STA &75	LDX #10	LDY TV1	JSR MULADD	TXA	CLC	ADC #200	TAX	BCC OKNC1	INYOKNC1:		STX YOURSC	STY YOURSC+1			JSR PRINT_DECIMAL	JSR VDU	DB 31,3,25	NOP	JSR LINE_PRINT	DB 'SKILL LEVEL '	NOP	LDX SKILL		INX	TXA	ORA #'0'	JSR DOUBLE	LDA #0	STA P_DOUBLE_BIT	STA TUNE_BIT	LDA #15	LDX #0	JSR &FFF4			JSR TIME	LDA CONTEST	CMP #5		; IF LAST EVENT	BEQ NEED_NONE	; NO NEED	LDX #4	CLC	LDA LEVEL1	ADC LEVEL2	ADC LEVEL3	ADC LEVEL4	ADC LEVEL5	LDY CONTEST	CMP EN_LEVEL,Y	BCC A_LOT	CMP #150-30	BCS NEED_NONE	DEX	DEXA_LOT:	TXA	STA NUMBER_BARS	LDA #0	JSR DRAWSCR	JSR BAR_SET_UP	JSR NO_RANDOMNEED_NONE:	RTSEN_LEVEL:	DB 100	DB 90	DB 80	DB 70	DB 60	DB 50LIVES:	DB 0YOURSC:	DW 0SKILL:	DB 0CONTEST:	DB 0TIME_UP:	CMP #3	BNE NOT_BELL_TI		LDA #12	JSR &FFEE	JMP LIVVNOT_BELL_TI:	JSR VDU	DB 12,31,4,6	NOP	JSR LINE_PRINT	DB 'YOU ARE OUT'	NOP	JSR VDU	DB 31,6,9	NOP	JSR LINE_PRINT	DB 'OF TIME'	NOPLIVV:	JSR VDU	DB 31,4,15	NOP	JSR LINE_PRINT	DB 'LIVES LEFT.'	NOP	DEC LIVES	LDA LIVES	; 2 1 0	ORA #'0'	JSR DOUBLE	LDA LIVES	BNE STILL_PLAY	PLA	PLA	JMP REALY_FINISHEDSTILL_PLAY:	LDA #15	LDX #0	JSR &FFF4	JSR TIME	RTSTHE_END:JSR LEVEL	JSR STOP	LDX #100	JSR DPAUSE		JSR VDU		; 2 COLLAPSE	DB 12,31,3,6	NOP	JSR LINE_PRINT	DB 'YOU HAVE JUST'	NOP	JSR VDU		DB 31,5,9	NOP	JSR LINE_PRINT	DB 'COLLAPSED'	NOPREALY_FINISHED:	JSR VDU	DB 31,5,20	NOP	JSR LINE_PRINT	DB 'GAME OVER'	NOP	JSR VDU	DB 31,3,22	NOP	LDA #15	LDX #0	JSR &FFF4	JSR TIME	JSR VDU	DB 12,31,3,2	NOP	JSR LINE_PRINT	DB 'Final Score :'	NOP	JSR VDU	DB 31,7,5	NOP	LDA #1	STA P_DOUBLE_BIT	LDX YOURSC	LDY YOURSC+1	JSR PRINT_DECIMAL	DEC P_DOUBLE_BIT	JSR VDU	DB 31,3,15	NOP	JSR LINE_PRINT	DB 'Geoff',39,'s Rating'	NOP	JSR VDU	DB 31,4,24	NOP	JSR RATING	LDA #15	LDX #0	JSR &FFF4	LDA #129	LDX #LOW 500	LDY #HIGH 500	JSR &FFF4	LDA #126	JSR &FFF4	JMP high_scoreRATING:JSR RANDOM	AND #1	CMP #1	LDA YOURSC+1	LSR A	LSR A	ADC #0	TAX	BEQ RAT1	DEX	BEQ RAT2	DEX 	BEQ RAT3	DEX 	BEQ RAT4	DEX	BEQ RAT5	DEX	BEQ RAT6	DEX	BEQ RAT7	DEX	BEQ RAT8	DEX	BEQ RAT9		JMP RAT10RAT1:	JSR LINE_PRINT	DB 'SUPER WIMP'	NOP	RTSRAT2:	JSR LINE_PRINT	DB 'MR PUNYVERSE '	NOP	RTSRAT3:	JSR LINE_PRINT	DB 'SUPER GRAN'	NOP	RTSRAT4:	JSR LINE_PRINT	DB 'KING WEED'	NOP	RTSRAT5:	JSR LINE_PRINT	DB 'DALEY'	NOP	RTSRAT6:	JSR LINE_PRINT	DB 'MACHO MAN'	NOP	RTSRAT7:	JSR LINE_PRINT	DB 'SUPER HUNK'	NOP	RTSRAT8:	JSR LINE_PRINT	DB 'THE HULK'	NOP	RTSRAT9:	JSR LINE_PRINT	DB 'HE MAN'	NOP	RTSRAT10:	JSR LINE_PRINT	DB 'GEOFF CAPES'	NOP	RTSRANDOM:	TXA	PHA	LDX #&08RAND:	LDA SEED	AND #&48	ADC #&38	ASL A	ASL A	ROL SEED+2	ROL SEED+1	ROL SEED	DEX	BNE RAND	PLA	TAX	LDA SEED	RTSSETSEED:	LDA &240	ORA #1	STA SEED	EOR #255	STA SEED+1	LDA &240	EOR &FC	EOR #255	STA SEED+2	RTSRANDOM2:	PHA	JSR RANDOM	TAX	PLA	TAY	JSR MULT	TYA	RTSS_OFF:	LDA ELK	BNE SEQ	LDA #8	STA &FE00	LDA #48	STA &FE01SEQ:	RTSS_ON:	LDA ELK	BNE SEQ	LDA #8	STA &FE00	LDA #0	STA &FE01	RTSC_OFF:	JSR VDU	DB 23,0,10,32,0,0,0,0,0,0,0	NOP	RTSV_SYNC:	JSR RGSV	LDA #19		JSR &FFF4	JMP RGLDTIME:	LDX #100	JSR DPAUSE	LDA #&81	LDX #LOW 500	LDY #HIGH 500	JMP &FFF4KB_OF:	LDA #15	LDX #0	JSR &FFF4	LDA #201	LDX #1	JMP &FFF4KB_ON:	LDA #15	LDX #0	JSR &FFF4	LDA #201	LDX #0	JMP &FFF4VALUE1:	PHA	JSR VDU	DB 31,1,16	NOP	PLA	TAX	LDY #0	JMP PRINT_DECIMALVALUE2:	PHA	JSR VDU	DB 31,6,16	NOP	PLA	TAX	LDY #0	JMP PRINT_DECIMALA_GET:	LDA #15	LDX #0	JSR &FFF4	JSR &FFE0	BCC no_error	LDA #126	JMP &FFF4	JMP A_GETno_error:	RTSY_N:	JSR A_GET	CMP #ASC'Y'	BEQ YES	LDA #2	JSR SOUND	CLC	; IF NO	RTSYES:	LDA #1	JSR SOUND	SEC	; IF YES	RTSTUNEPLEASE:	LDA TUNE_BIT	BNE SPQR	JSR &0ADF	LDA #0	STA TIMER_STATUSTUNE1:	JSR JOY	JSR &A01	JSR EFFORTUD	LDA KFIRE	BEQ TUNE1	LDA #1	STA TIMER_STATUS	STA TUNE_BITSPQR:	RTS	SPEEK_NUMBER:	PHA	LDA #15	LDX #0	JSR &FFF4	PLA	ORA #'0'	STA SPEEK_BUFF+2	LDX #LOW SPEEK_BUFF	LDY #HIGH SPEEK_BUFF	LDA #7	JMP &FFF1SOUND:	JSR RGSV	ASL A	ASL A	ASL A	; * 8	ADC #LOW SPEEK_BUFF	TAX	; X LOW BYTE	LDY #HIGH SPEEK_BUFF	BCC NO_HIGH	INYNO_HIGH:	LDA #7	JSR &FFF1	; SOUND	JMP RGLDSPEEK_BUFF:	DW -1,48,0,0	; ZERO	DW -1,289,0,0	; YES	DW -1,226,0,0	; NO	DW &13,-12,0,1	; WALK	DW 0,2,5,4	; F THUD	DW &10,2,6,8	; THUD 2	DW 0,-11,5,1	; CHOP	DW 1,3,100,10	; BELL	DW 1,3,200,1	; PING 8	DW -1,290,0,0	; YOUR 9	DW -1,233,0,0	; OFF 10	DW -1,207,0,0	; IN 11	DW -1,276,0,0	; UH 12 	DW -1,188,0,0	;E 13	DW -1,138,0,0	; Z14			; OTHER SOUNDS ???	DB 'THIS GAME WAS BROUGHT TO'	DB ' YOU BY MICHAEL ARCHER '	DB 'DAVID WAINWRIGHT '	DB 'SIRT AND ALISON '	DB 'MARGARET STANGER '		DB 'DO NOT RIP THE MEGA '	DB 'PIECE OF SOFTWARE OFF'	DB ' OR GEOFF CAPES WILL '	DB 'START DISHING OUT THE '	DB 'PUNCHES ..OK HACKER '	DB 'BYE BYE M.J.A '	END