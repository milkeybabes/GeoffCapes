high_score:	LDA #13	LDX #4	JSR &FFF4	LDA #19	JSR &FFF4	JSR vdu	DB 22,4,19,1,3,0,0,0	DB 19,0,1,0,0,0	NOP	JSR C_OFF	LDA #15	JSR &FFF4	LDX YOURSC	LDY YOURSC+1	JSR high_score_table	JSR vdu	DB 12,31,9,1	NOP	JSR line_print	DB 'GEOFF',39,'S HALL OF FAME'	NOPhigh_brose:	JSR PHSCTAB	JSR vdu	DB 31,13,29	NOP	JSR line_print	DB 'PRESS ANY KEY'	NOP	JSR A_GET	JMP FIRST_PAGE	NAMES:	DB'HHHH'+'P'+'...'	DB 13,0	Anput:	LDA #LOW NAMES 	STA &60	LDA #HIGH NAMES	STA &61 	LDA #0	STA &63Input1:	LDA #'*' 	JSR DOUBLE	LDA #8	JSR &FFEE	JSR &FFE0	CMP #127	BEQ input2	LDY &63	STA (&60),Y	CMP #13	BEQ input3	JSR DOUBLE	INC &63	LDA &63	CMP #9	BNE input1 	LDA #7	JSR &FFEEinput2:	LDA &63	BEQ input1	LDA #32	JSR DOUBLE	LDA #8	JSR &FFEE	JSR &FFEE	DEC &63	JMP input1 input3:		RTSDOB13:	JSR &FFE7	JSR &FFE7	JMP &FFE7DOUBLE:		STA &400	  	CMP #13	BEQ DOB13doub:	PHA	TXA	PHA	TYA	PHA	LDX #&0	LDY #&4	LDA #&0A	JSR &FFF1	LDA #23	JSR &FFEE	LDA #254	JSR &FFEE	LDY #0DOB1:		LDA &401,Y 	JSR &FFEE	JSR &FFEE	INY	CPY #4	BNE DOB2	LDA #23	JSR &FFEE	LDA #255	JSR &FFEEDOB2:		CPY #8   	BNE DOB1	LDA #254	JSR &FFEE	LDA #10	JSR &FFEE	LDA #8	JSR &FFEE	LDA #255	JSR &FFEE 	LDA #11	JSR &FFEE	PLA	TAY	PLA	TAX	PLA	RTS	INSNAME:	JSR vdu	DB 31,9,4	NOP	JSR line_print	DB 'YOU ARE IN THE TOP TEN'	NOP	JSR vdu	DB 31,13,10	NOP	JSR line_print	DB 'ENTER YOU NAME'	NOP	JSR vdu	DB 31,15,18	NOP	INC position	LDA #11	STA POSITION1 	LDY #10*10SWNAME:		LDA NAMTAB,Y	STA NAMTAB+10,Y	DEY	CMP #0	BNE SWNAME 	DEC POSITION1	LDA POSITION1	CMP position	BNE SWNAME 	INY	INY	TYA	PHA	JSR Anput	PLA	TAY	LDX #0SNML:	LDA NAMES,X	STA NAMTAB,Y	INX	INY	CPX #9	BNE SNML	 SNML3:	LDA #0	STA NAMTAB,Y   	RTSPHSCTAB:	JSR SWINDOW1		LDX #0	STX position	LDY #0PHS1:		LDA NAMTAB+10,Y	CMP #&D	BEQ PHS2	JSR DOUBLE   	INY	CMP #&D	BNE PHS1	JMP PHS1PHS2:	LDA #32	JSR DOUBLE	LDA NAMTAB+10,Y	INY	CMP #0	BNE PHS2		LDA #'.'	JSR DOUBLE	JSR DOUBLE	JSR DOUBLE	JSR PSCORE	LDA #13	JSR DOUBLE 	INC position	INX	CPX #5	BEQ SWINDOW	CPX #10	BNE PHS1	LDA #26	JSR &FFEE	RTSSWINDOW:	JSR vdu	DB 28,22,31,39,5	NOP	JMP PHS1SWINDOW1:	JSR vdu	DB 28,1,31,20,5	NOP	RTSNAMTAB:	DB 'NO ONE  ',13,0	DB 'MICK.A  ',13,0	DB 'ALISON.J',13,0	DB 'DAVE.W  ',13,0	DB 'COLIN.G ',13,0	DB 'JASON.D ',13,0	DB 'JOHN.N  ',13,0	DB 'SIMON.W ',13,0	DB 'ROBIN.B ',13,0	DB 'KENNY.R ',13,0	DB 'ROGER.W ',13,0high_score_table:		STX lo_score_temp	STY hi_score_temp	LDX #0	STX positionchecker:		LDA position	ASL A	TAX	INX	TAY	INY	LDA Htable,X	CMP hi_score_temp	BEQ c_low 	BCC shuffle	BNE Doverc_low:		DEX	LDA Htable,X 	CMP lo_score_temp	BCC shuffleDover:		INC position	LDA position 	CMP #10	BNE checkertuff:	RTS	; NOT IN TABLEshuffle:		LDA Htable,Y	STA Htable+22	LDA hi_score_temp	STA Htable,Y 	DEY	LDA Htable,Y 	STA Htable+21	LDA lo_score_temp	STA Htable,Y	LDA Htable+22	STA hi_score_temp 	LDA Htable+21	STA lo_score_temp 	INY	INY	INY	CPY #21	BNE shuffle	JMP INSNAME	Htable:		DW 10000	DW 9000	DW 8000	DW 7000	DW 6000	DW 5000	DW 4000	DW 3500	DW 3000	DW 2000	DW 1500	DW 1000	DW 0900PSCORE:	TXA	PHA	TYA	PHA	LDA #1	STA p_double_bit	LDA position	ASL A	TAY	LDA Htable,Y	TAX	LDA Htable+1,Y	TAY	JSR print_decimal	DEC p_double_bit 	PLA	TAY	PLA	TAX	RTS	ADD:   	  ; XY +&74,75 =74,75  	CLC	TXA 	ADC &74 	TAX  	STA &74 	TYA  	ADC &75  	TAY  	STA &75  	RTSSUBT:    	 ; &74,75-XY=&74,75   	STX &70  	STY &71  	SEC  	LDA &74  	SBC &70  	TAX  	STA &74  	LDA &75  	SBC &71  	TAY  	STA &75  	RTS    MULT: 		    ; MUL XY=X*Y"  	STX &70  	STY &71  	LDA #0  	STA &73  	LDX #8SHIFT:  	ASL A  	ROL &73  	ASL &71  	BCC CHCNT  	CLC  	ADC &70  	BCC CHCNT  	INC &73CHCNT:  	DEX  	BNE SHIFT  	TAX  	LDY &73  	RTS MULADD:	   ;"MULT +ADD TO &74 ,&75"  	JSR MULT  	JMP ADDMULSUB: 	  ; &74 ,&75-(X*Y)  	JSR MULT  	JSR SUBT  	RTSDVI:		 ; A BY Y times   DV:  	CPY#0  	BEQ DV2  	LSR A  	DEY  	JMP DVDV2:  	RTS DVIDE:  	STX &70  	STY &72  	LDA#0  	STA &71  	LDX#8  	LDA &70  	STA &73  	LDA &71DVI1:  	ASL &73  	ROL A  	CMP &72  	BCC DVI2  	SBC &72  	INC &73DVI2:  	DEX  	BNE DVI1  	STA &74  	LDX &73  	LDY &74  	RTS print_decimal:	JSR RGSV  	STX &80	  	; Print X,Y in decimal  	STY &81	LDX #0	;Set digit counter convert:	;One digit at a time	LDY #16	;Set bit counter	LDA #0div10:	;Divide current contents of &80 by 10  	ASL &80	ROL &81	ROL A	CMP #10	BCC less	SBC #10	INC &80less:		DEY	BNE div10	CLC	;Remainder in acc:	 - next digit to be output	ADC #&30;Convert to II code	PHA	;Save it on stack	INX	;Increment digit count	LDA &80	ORA &81	BNE convert	;If &80 <> 0 prepare next digitDdisplay:	;Output digits in correct order	LDA p_double_bit	BNE big_ones Ddisplay2:	PLA	JSR &FFEE	DEX	BNE Ddisplay2	JMP RGLD big_ones:	PLA	JSR DOUBLE	DEX	BNE big_ones	JMP RGLD		line_print:		JSR RGSV	PLA	STA zero	PLA	STA zero+1lp1:	LDY #1	LDA (zero),Y	CMP #&EA	BEQ lp3	JSR DOUBLE	INC zero	BNE lp1	INC zero+1	BNE lp1lp3:	LDA zero+1	PHA	LDA zero	PHA	JMP RGLDvdu:		JSR RGSV	PLA	STA zero	PLA	STA zero+1Alp1:	LDY #1	LDA (zero),Y	CMP #&EA	BEQ Alp3	JSR &FFEE	INC zero	BNE Alp1	INC zero+1	BNE Alp1Alp3:	LDA zero+1	PHA	LDA zero	PHA	JMP RGLD	EXTEND ':2.R.DRAW'